!standard A.5.1 (5)                                  13-10-31    AI12-0091-1/01
!class Amendment 13-10-31
!status work item 13-10-31
!status received 13-10-17
!priority Low
!difficulty Easy
!subject Add procedure Sin_Cos to Ada.Numerics.Generic_Elementary_Functions
!summary

Procedure Sin_Cos is added to Ada.Numerics.Generic_Elementary_Functions
!problem

In many cases you need the sinus and the cosinus of an angle.
Modern FPUs (at least since 80387 in 1987) provide the calculation of both
sin and cos at the same time (fsincos instruction). In performance-sensitive
programs, calling the Sin and Cos functions separately is an obvious bottleneck.

!proposal

(See summary.)

!wording

Add after A.5.1(5):

   procedure Sin_Cos (X : in Float_Type'Base; Sin, Cos : out Float_Type'Base);

[Editor's note: Do we need the version with a Cycle, too?]

!discussion

The description of the semantics of the package is general enough that there
don't appear to be any wording changes needed.

!ASIS

No ASIS impact.

!ACATS test

An ACATS C-Test is needed.

!appendix

!topic Ada.Numerics.Generic_Elementary_Functions: procedure Sin_Cos
!reference A.5.1 (5)
!from Gautier de Montmollin 17-10-13
!keywords sin cos sin_cos
!discussion

Here is a proposal for an addition to the trigonometric part of elementary functions:


   procedure Sin_Cos (X : in Float_Type'Base; Sin, Cos : out Float_Type'Base);

The rationale is the following: in many cases you need the sinus and the
cosinus of an angle. Modern FPUs (at least since 80387 in 1987) provide the
calculation of both sin and cos at the same time (fsincos instruction).
In performance-sensitive programs, calling the Sin and Cos functions
separately is an obvious bottleneck.

****************************************************************
