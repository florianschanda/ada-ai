!standard C.7.1(15)                                    17-06-05  AI12-0231-1/01
!class binding interpretation 17-06-05
!status work item 17-06-04
!status received 17-05-13
!priority Low
!difficulty Easy
!qualifier Omission
!subject Null_Task_Id and Activation_Is_Complete
!summary

Activation_Is_Complete raises Program_Error if passed Null_Task_Id.

!question

What happens if Ada.Task_Identification.Activation_Is_Complete is passed
Null_Task_Id? (Program_Error is raised.) Other routines like Is_Terminated
raise Program_Error by rule (C.7.1.(15)), but nothing is said about
Activation_Is_Complete.

!recommendation

(See Summary.)

!wording

Modify C.7.1(15):

Program_Error is raised if a value of Null_Task_Id is passed as a parameter
to Abort_Task, {Activation_Is_Complete, }Is_Terminated, and Is_Callable.

!discussion

This looks like a straightforward omission; like the other existing functions,
there is no other sensible answer for Activation_Is_Complete.

!corrigendum C.7.1(15)

@drepl
Program_Error is raised if a value of Null_Task_Id is passed as a parameter
to Abort_Task, Is_Terminated, and Is_Callable.
@dby
Program_Error is raised if a value of Null_Task_Id is passed as a parameter
to Abort_Task, Activation_Is_Complete, Is_Terminated, and Is_Callable.

!ASIS

No ASIS effect.

!ACATS test

An ACATS C-Test should check this, preferably as part of a test for
Activation_Is_Complete.

!appendix

From: Tucker Taft
Sent: Saturday, May 13, 2017  3:29 PM

When we added Activation_Is_Complete to Ada.Task_Identification, we forgot to
say what happens when the Task_Id is Null_Task_Id.  We need to update paragraph
C.7.1(15) to say that Program_Error is raised when Null_Task_Id is passed to
Activation_Is_Complete.

****************************************************************
